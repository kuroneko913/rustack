--------------------------------
eval: Sym("fib")
Stack: [] 

--------------------------------
Code: /fib

Stack: []
 -> [Sym("fib")]

--------------------------------
Code: {

Blocks: [] 
-> [[]]

--------------------------------
eval: Sym("n")
Stack: [Sym("fib")] 

--------------------------------
Code: /n

Blocks: [[]] 
-> [[Sym("n")]]

--------------------------------
eval: Op("exch")
Stack: [Sym("fib")] 

--------------------------------
Code: exch

Blocks: [[Sym("n")]] 
-> [[Sym("n"), Op("exch")]]

--------------------------------
eval: Op("def")
Stack: [Sym("fib")] 

--------------------------------
Code: def

Blocks: [[Sym("n"), Op("exch")]] 
-> [[Sym("n"), Op("exch"), Op("def")]]

--------------------------------
Code: {

Blocks: [[Sym("n"), Op("exch"), Op("def")]] 
-> [[Sym("n"), Op("exch"), Op("def")], []]

--------------------------------
eval: Op("n")
Stack: [Sym("fib")] 

--------------------------------
Code: n

Blocks: [[Sym("n"), Op("exch"), Op("def")], []] 
-> [[Sym("n"), Op("exch"), Op("def")], [Op("n")]]

--------------------------------
eval: Num(1)
Stack: [Sym("fib")] 

--------------------------------
Code: 1

Blocks: [[Sym("n"), Op("exch"), Op("def")], [Op("n")]] 
-> [[Sym("n"), Op("exch"), Op("def")], [Op("n"), Num(1)]]

--------------------------------
eval: Op("<")
Stack: [Sym("fib")] 

--------------------------------
Code: <

Blocks: [[Sym("n"), Op("exch"), Op("def")], [Op("n"), Num(1)]] 
-> [[Sym("n"), Op("exch"), Op("def")], [Op("n"), Num(1), Op("<")]]

--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Sym("fib")] 

--------------------------------
Code: }

Blocks: [[Sym("n"), Op("exch"), Op("def")], [Op("n"), Num(1), Op("<")]] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")])]]

--------------------------------
Code: {

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")])]] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")])], []]

--------------------------------
eval: Num(0)
Stack: [Sym("fib")] 

--------------------------------
Code: 0

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")])], []] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")])], [Num(0)]]

--------------------------------
eval: Block([Num(0)])
Stack: [Sym("fib")] 

--------------------------------
Code: }

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")])], [Num(0)]] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])]]

--------------------------------
Code: {

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])]] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], []]

--------------------------------
Code: {

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], []] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [], []]

--------------------------------
eval: Op("n")
Stack: [Sym("fib")] 

--------------------------------
Code: n

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [], []] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [], [Op("n")]]

--------------------------------
eval: Num(2)
Stack: [Sym("fib")] 

--------------------------------
Code: 2

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [], [Op("n")]] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [], [Op("n"), Num(2)]]

--------------------------------
eval: Op("<")
Stack: [Sym("fib")] 

--------------------------------
Code: <

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [], [Op("n"), Num(2)]] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [], [Op("n"), Num(2), Op("<")]]

--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Sym("fib")] 

--------------------------------
Code: }

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [], [Op("n"), Num(2), Op("<")]] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")])]]

--------------------------------
Code: {

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")])]] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")])], []]

--------------------------------
eval: Num(1)
Stack: [Sym("fib")] 

--------------------------------
Code: 1

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")])], []] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")])], [Num(1)]]

--------------------------------
eval: Block([Num(1)])
Stack: [Sym("fib")] 

--------------------------------
Code: }

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")])], [Num(1)]] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])]]

--------------------------------
Code: {

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])]] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])], []]

--------------------------------
eval: Op("n")
Stack: [Sym("fib")] 

--------------------------------
Code: n

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])], []] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])], [Op("n")]]

--------------------------------
eval: Num(1)
Stack: [Sym("fib")] 

--------------------------------
Code: 1

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])], [Op("n")]] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])], [Op("n"), Num(1)]]

--------------------------------
eval: Op("-")
Stack: [Sym("fib")] 

--------------------------------
Code: -

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])], [Op("n"), Num(1)]] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])], [Op("n"), Num(1), Op("-")]]

--------------------------------
eval: Op("fib")
Stack: [Sym("fib")] 

--------------------------------
Code: fib

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])], [Op("n"), Num(1), Op("-")]] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])], [Op("n"), Num(1), Op("-"), Op("fib")]]

--------------------------------
eval: Op("n")
Stack: [Sym("fib")] 

--------------------------------
Code: n

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])], [Op("n"), Num(1), Op("-"), Op("fib")]] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])], [Op("n"), Num(1), Op("-"), Op("fib"), Op("n")]]

--------------------------------
eval: Num(2)
Stack: [Sym("fib")] 

--------------------------------
Code: 2

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])], [Op("n"), Num(1), Op("-"), Op("fib"), Op("n")]] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])], [Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2)]]

--------------------------------
eval: Op("-")
Stack: [Sym("fib")] 

--------------------------------
Code: -

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])], [Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2)]] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])], [Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-")]]

--------------------------------
eval: Op("fib")
Stack: [Sym("fib")] 

--------------------------------
Code: fib

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])], [Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-")]] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])], [Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib")]]

--------------------------------
eval: Op("+")
Stack: [Sym("fib")] 

--------------------------------
Code: +

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])], [Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib")]] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])], [Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]]

--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Sym("fib")] 

--------------------------------
Code: }

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])], [Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])]]

--------------------------------
eval: Op("if")
Stack: [Sym("fib")] 

--------------------------------
Code: if

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])]] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]]

--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Sym("fib")] 

--------------------------------
Code: }

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])], [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])]]

--------------------------------
eval: Op("if")
Stack: [Sym("fib")] 

--------------------------------
Code: if

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])]] 
-> [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")]]

--------------------------------
eval: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
Stack: [Sym("fib")] 

--------------------------------
Code: }

Stack: [Sym("fib")]
 -> [Sym("fib"), Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])]

Blocks: [[Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")]] 
-> []

--------------------------------
eval: Op("def")
Stack: [Sym("fib"), Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])] 

--------------------------------
eval: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
Stack: [Sym("fib")] 

--------------------------------
Code: def

Stack: [Sym("fib"), Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])]
 -> []

Vars Added: {"exch": Native(<NativeOp>), "-": Native(<NativeOp>), "*": Native(<NativeOp>), "def": Native(<NativeOp>), "+": Native(<NativeOp>), "/": Native(<NativeOp>), "fib": Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")]), "dup": Native(<NativeOp>), "if": Native(<NativeOp>), "puts": Native(<NativeOp>), "<": Native(<NativeOp>)}

--------------------------------
eval: Num(10)
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
--------------------------------
Code: 10

Stack: []
 -> [Num(10)]

--------------------------------
eval: Op("fib")
Stack: [Num(10)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
--------------------------------
eval: Sym("n")
Stack: [Num(10)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
--------------------------------
eval: Op("exch")
Stack: [Num(10), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
--------------------------------
eval: Op("def")
Stack: [Sym("n"), Num(10)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
--------------------------------
eval: Num(10)
Stack: [Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Block([Num(0)])
Stack: [Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Op("if")
Stack: [Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Num(1)
Stack: [Num(10)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Op("<")
Stack: [Num(10), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Block([Num(1)])
Stack: [Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Op("if")
Stack: [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Num(2)
Stack: [Num(10)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Op("<")
Stack: [Num(10), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Num(1)
Stack: [Num(10)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Op("-")
Stack: [Num(10), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Op("fib")
Stack: [Num(9)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Sym("n")
Stack: [Num(9)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Op("exch")
Stack: [Num(9), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Op("def")
Stack: [Sym("n"), Num(9)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Num(9)
Stack: [Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Block([Num(0)])
Stack: [Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Op("if")
Stack: [Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Num(1)
Stack: [Num(9)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Op("<")
Stack: [Num(9), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Block([Num(1)])
Stack: [Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Op("if")
Stack: [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Num(2)
Stack: [Num(9)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Op("<")
Stack: [Num(9), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Num(1)
Stack: [Num(9)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Op("-")
Stack: [Num(9), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Op("fib")
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Sym("n")
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Op("exch")
Stack: [Num(8), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Op("def")
Stack: [Sym("n"), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Num(8)
Stack: [Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Block([Num(0)])
Stack: [Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Op("if")
Stack: [Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Num(1)
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Block([Num(1)])
Stack: [Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Op("if")
Stack: [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Num(2)
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Num(1)
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Op("-")
Stack: [Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Op("fib")
Stack: [Num(7)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Sym("n")
Stack: [Num(7)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Op("exch")
Stack: [Num(7), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Op("def")
Stack: [Sym("n"), Num(7)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Num(7)
Stack: [Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Block([Num(0)])
Stack: [Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("if")
Stack: [Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Num(1)
Stack: [Num(7)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("<")
Stack: [Num(7), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Block([Num(1)])
Stack: [Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("if")
Stack: [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Num(2)
Stack: [Num(7)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("<")
Stack: [Num(7), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Num(1)
Stack: [Num(7)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("-")
Stack: [Num(7), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("fib")
Stack: [Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Sym("n")
Stack: [Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("exch")
Stack: [Num(6), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("def")
Stack: [Sym("n"), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Num(6)
Stack: [Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Block([Num(0)])
Stack: [Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("if")
Stack: [Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Num(1)
Stack: [Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("<")
Stack: [Num(6), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Block([Num(1)])
Stack: [Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("if")
Stack: [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Num(2)
Stack: [Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("<")
Stack: [Num(6), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Num(1)
Stack: [Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("-")
Stack: [Num(6), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("fib")
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Sym("n")
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("exch")
Stack: [Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("def")
Stack: [Sym("n"), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Num(5)
Stack: [Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Num(0)])
Stack: [Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("if")
Stack: [Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(1)
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("<")
Stack: [Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Num(1)])
Stack: [Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("if")
Stack: [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(2)
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("<")
Stack: [Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(1)
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("-")
Stack: [Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("fib")
Stack: [Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Sym("n")
Stack: [Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("exch")
Stack: [Num(4), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("def")
Stack: [Sym("n"), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(4)
Stack: [Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Num(0)])
Stack: [Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Num(1)])
Stack: [Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Sym("n"), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(3)
Stack: [Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(0)])
Stack: [Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(1)])
Stack: [Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(1), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(1), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(1), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(1), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(1), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(1), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(1), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("+")
Stack: [Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(2), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(2), Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(2), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Num(2), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(2), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(2), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(2), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(2), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(2), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(2), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(2), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(2), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("+")
Stack: [Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(2)
Stack: [Num(3), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("-")
Stack: [Num(3), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("fib")
Stack: [Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Sym("n")
Stack: [Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("exch")
Stack: [Num(3), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("def")
Stack: [Num(3), Sym("n"), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(3)
Stack: [Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(3), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(3), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(3), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(3), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(3), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(3), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(3), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(3), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(3), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(3), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(3), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(3), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(3), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(3), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(3), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(3), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(3), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(3), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(3), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(3), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(3), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(3), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(3), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(3), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(3), Num(1), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(3), Num(1), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(3), Num(1), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(3), Num(1), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(3), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(3), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(3), Num(1), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(3), Num(1), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(3), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(3), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(3), Num(1), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("+")
Stack: [Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("+")
Stack: [Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Num(2)
Stack: [Num(5), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("-")
Stack: [Num(5), Num(6), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("fib")
Stack: [Num(5), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Sym("n")
Stack: [Num(5), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("exch")
Stack: [Num(5), Num(4), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("def")
Stack: [Num(5), Sym("n"), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Num(4)
Stack: [Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(5), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(5), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(5), Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(5), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(5), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(5), Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(5), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(5), Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(5), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Num(5), Sym("n"), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(3)
Stack: [Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(5), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(5), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(5), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(5), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(5), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(5), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(5), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(5), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(5), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(5), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(5), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(5), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(5), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(5), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(5), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(5), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(5), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(5), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(5), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(5), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(5), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(5), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(5), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(5), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(5), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(5), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(5), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(5), Num(1), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(5), Num(1), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(5), Num(1), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(5), Num(1), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(5), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(5), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(5), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(5), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(5), Num(1), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(5), Num(1), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(5), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(5), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(5), Num(1), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("+")
Stack: [Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(5), Num(2), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(5), Num(2), Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(5), Num(2), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Num(5), Num(2), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(5), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(5), Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(5), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(5), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(5), Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(5), Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(5), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(5), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(5), Num(2), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(5), Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(5), Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(5), Num(2), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(5), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(5), Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(5), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(5), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(5), Num(2), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(5), Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(5), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(5), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(5), Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(5), Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(5), Num(2), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(5), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(5), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(5), Num(2), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(5), Num(2), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(5), Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(5), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(5), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(5), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(5), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(5), Num(2), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(5), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("+")
Stack: [Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("+")
Stack: [Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("n")
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Num(2)
Stack: [Num(8), Num(7)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("-")
Stack: [Num(8), Num(7), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("fib")
Stack: [Num(8), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Sym("n")
Stack: [Num(8), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("exch")
Stack: [Num(8), Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("def")
Stack: [Num(8), Sym("n"), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Num(5)
Stack: [Num(8), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(8), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("if")
Stack: [Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(8), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("if")
Stack: [Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Num(2)
Stack: [Num(8), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("-")
Stack: [Num(8), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("fib")
Stack: [Num(8), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Sym("n")
Stack: [Num(8), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("exch")
Stack: [Num(8), Num(4), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("def")
Stack: [Num(8), Sym("n"), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Num(4)
Stack: [Num(8), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(8), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(8), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(8), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(8), Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(8), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Num(8), Sym("n"), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(3)
Stack: [Num(8), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(8), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(8), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(8), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(8), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(8), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(8), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(8), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(8), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(8), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(8), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(8), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(8), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(8), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(8), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(8), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(8), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(8), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(8), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(8), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(8), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(8), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(8), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(8), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(8), Num(1), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(8), Num(1), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(8), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(8), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(8), Num(1), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(8), Num(1), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(8), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(8), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(8), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(1), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(8), Num(1), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(8), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(8), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(8), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(1), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("+")
Stack: [Num(8), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(8), Num(2), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(8), Num(2), Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(8), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(8), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(8), Num(2), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Num(8), Num(2), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(8), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(8), Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(8), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(8), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(8), Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(8), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(8), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(8), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(2), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(8), Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(8), Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(8), Num(2), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(8), Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(8), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(8), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(2), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(8), Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(8), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(8), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(8), Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(8), Num(2), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(8), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(8), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(8), Num(2), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(8), Num(2), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(8), Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(8), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(8), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(8), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(2), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(8), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("+")
Stack: [Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Num(2)
Stack: [Num(8), Num(3), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("-")
Stack: [Num(8), Num(3), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("fib")
Stack: [Num(8), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Sym("n")
Stack: [Num(8), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("exch")
Stack: [Num(8), Num(3), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("def")
Stack: [Num(8), Num(3), Sym("n"), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Num(3)
Stack: [Num(8), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(8), Num(3), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(8), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(8), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(3), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(8), Num(3), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(8), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(8), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(8), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(3), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(8), Num(3), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(8), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(8), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(8), Num(3), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(8), Num(3), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(8), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(8), Num(3), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(8), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(8), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(3), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(8), Num(3), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(8), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(8), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(8), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(3), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(8), Num(3), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(8), Num(3), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(8), Num(3), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(8), Num(3), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(8), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(8), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(8), Num(3), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(8), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(8), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(3), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(8), Num(3), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(8), Num(3), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(8), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(8), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(8), Num(3), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(8), Num(3), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(8), Num(3), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(8), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(8), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(8), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(3), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(8), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(8), Num(3), Num(1), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(8), Num(3), Num(1), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(8), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(8), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(8), Num(3), Num(1), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(8), Num(3), Num(1), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(3), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(8), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(8), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(8), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(3), Num(1), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(8), Num(3), Num(1), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(8), Num(3), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(8), Num(3), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(8), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(8), Num(3), Num(1), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("+")
Stack: [Num(8), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("+")
Stack: [Num(8), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("+")
Stack: [Num(8), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("n")
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Op("-")
Stack: [Num(13), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Op("fib")
Stack: [Num(13), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Sym("n")
Stack: [Num(13), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Op("exch")
Stack: [Num(13), Num(6), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Op("def")
Stack: [Num(13), Sym("n"), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Num(6)
Stack: [Num(13), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(13), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(13), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("if")
Stack: [Num(13), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("n")
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(6), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(13), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(13), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("if")
Stack: [Num(13), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("n")
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(6), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("n")
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("-")
Stack: [Num(13), Num(6), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("fib")
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Sym("n")
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("exch")
Stack: [Num(13), Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("def")
Stack: [Num(13), Sym("n"), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Num(5)
Stack: [Num(13), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(13), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(13), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("if")
Stack: [Num(13), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(13), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(13), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("if")
Stack: [Num(13), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("-")
Stack: [Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("fib")
Stack: [Num(13), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Sym("n")
Stack: [Num(13), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("exch")
Stack: [Num(13), Num(4), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("def")
Stack: [Num(13), Sym("n"), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(4)
Stack: [Num(13), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(13), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(13), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Num(13), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(13), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(13), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Num(13), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(13), Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(13), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Num(13), Sym("n"), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(3)
Stack: [Num(13), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(13), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(13), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(13), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(13), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(13), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(13), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(13), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(13), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(13), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(13), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(13), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(13), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(13), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(13), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(13), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(13), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(13), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(13), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(13), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(13), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(13), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(13), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(13), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(13), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(13), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(13), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(13), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(13), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(13), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(13), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(13), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(13), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(13), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(13), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(1), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(13), Num(1), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(13), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(13), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(13), Num(1), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(13), Num(1), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(13), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(13), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(1), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(13), Num(1), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(13), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(1), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("+")
Stack: [Num(13), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(2), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(13), Num(2), Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(13), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(13), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(13), Num(2), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Num(13), Num(2), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(13), Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(13), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(13), Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(13), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(2), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(13), Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(13), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(13), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(13), Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(13), Num(2), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(13), Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(13), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(2), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(13), Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(13), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(13), Num(2), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(13), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(13), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(13), Num(2), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(13), Num(2), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(13), Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(13), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(13), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(13), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(2), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(13), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(13), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("+")
Stack: [Num(13), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(3), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("-")
Stack: [Num(13), Num(3), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("fib")
Stack: [Num(13), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Sym("n")
Stack: [Num(13), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("exch")
Stack: [Num(13), Num(3), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("def")
Stack: [Num(13), Num(3), Sym("n"), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(3)
Stack: [Num(13), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(13), Num(3), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(13), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(3), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(13), Num(3), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(13), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(3), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(13), Num(3), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(13), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(13), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(13), Num(3), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(13), Num(3), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(13), Num(3), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(13), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(3), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(13), Num(3), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(13), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(3), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(13), Num(3), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(13), Num(3), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(13), Num(3), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(13), Num(3), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(13), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(13), Num(3), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(13), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(3), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(3), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(13), Num(3), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(13), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(13), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(13), Num(3), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(13), Num(3), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(13), Num(3), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(13), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(13), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(3), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(13), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(3), Num(1), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(13), Num(3), Num(1), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(13), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(13), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(13), Num(3), Num(1), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(13), Num(3), Num(1), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(3), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(13), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(13), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(3), Num(1), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(13), Num(3), Num(1), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(13), Num(3), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(3), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(3), Num(1), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("+")
Stack: [Num(13), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("+")
Stack: [Num(13), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(5), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("-")
Stack: [Num(13), Num(5), Num(6), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("fib")
Stack: [Num(13), Num(5), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Sym("n")
Stack: [Num(13), Num(5), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("exch")
Stack: [Num(13), Num(5), Num(4), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("def")
Stack: [Num(13), Num(5), Sym("n"), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Num(4)
Stack: [Num(13), Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(13), Num(5), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(13), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(5), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(5), Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(13), Num(5), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(13), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(5), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(5), Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(5), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(13), Num(5), Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(13), Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(13), Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(13), Num(5), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Num(13), Num(5), Sym("n"), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(3)
Stack: [Num(13), Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(13), Num(5), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(13), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(5), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(13), Num(5), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(13), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(5), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(13), Num(5), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(13), Num(5), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(13), Num(5), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(13), Num(5), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(13), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(13), Num(5), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(13), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(13), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(13), Num(5), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(13), Num(5), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(13), Num(5), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(13), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(13), Num(5), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(13), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(5), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(5), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(13), Num(5), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(13), Num(5), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(13), Num(5), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(13), Num(5), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(13), Num(5), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(13), Num(5), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(13), Num(5), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(13), Num(5), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(5), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(5), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(5), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(13), Num(5), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(5), Num(1), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(13), Num(5), Num(1), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(13), Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(13), Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(13), Num(5), Num(1), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(13), Num(5), Num(1), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(5), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(13), Num(5), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(13), Num(5), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(5), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(5), Num(1), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(13), Num(5), Num(1), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(13), Num(5), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(5), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(5), Num(1), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("+")
Stack: [Num(13), Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(5), Num(2), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(13), Num(5), Num(2), Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(13), Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(13), Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(13), Num(5), Num(2), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Num(13), Num(5), Num(2), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(5), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(13), Num(5), Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(13), Num(5), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(5), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(5), Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(13), Num(5), Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(13), Num(5), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(5), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(5), Num(2), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(13), Num(5), Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(13), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(13), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(13), Num(5), Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(13), Num(5), Num(2), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(5), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(13), Num(5), Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(13), Num(5), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(5), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(5), Num(2), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(13), Num(5), Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(13), Num(5), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(5), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(5), Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(13), Num(5), Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(13), Num(5), Num(2), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(13), Num(5), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(13), Num(5), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(13), Num(5), Num(2), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(13), Num(5), Num(2), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(13), Num(5), Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(13), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(13), Num(5), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(13), Num(5), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(13), Num(5), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(13), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(13), Num(5), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(13), Num(5), Num(2), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(13), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(13), Num(5), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("+")
Stack: [Num(13), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("+")
Stack: [Num(13), Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("+")
Stack: [Num(13), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(8)
--------------------------------
eval: Op("n")
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(9)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(9), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(7)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(7)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(7), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Op("def")
Stack: [Num(21), Sym("n"), Num(7)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Num(7)
Stack: [Num(21), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Op("if")
Stack: [Num(21), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Op("n")
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(7)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(7), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Op("if")
Stack: [Num(21), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Op("n")
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(7)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(7), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Op("n")
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(7)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(7), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(6), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Op("def")
Stack: [Num(21), Sym("n"), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Num(6)
Stack: [Num(21), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("if")
Stack: [Num(21), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("n")
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(6), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("if")
Stack: [Num(21), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("n")
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(6), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("n")
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(6), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("def")
Stack: [Num(21), Sym("n"), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Num(5)
Stack: [Num(21), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("if")
Stack: [Num(21), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("if")
Stack: [Num(21), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(4), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("def")
Stack: [Num(21), Sym("n"), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(4)
Stack: [Num(21), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Num(21), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Num(21), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Num(21), Sym("n"), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(3)
Stack: [Num(21), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(21), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(21), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(21), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(21), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(21), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(21), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(21), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(21), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(21), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(21), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(21), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(1), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(1), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(1), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(1), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(1), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(1), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(1), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("+")
Stack: [Num(21), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(2), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(2), Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(2), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(2), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(2), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(2), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(2), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(2), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(2), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(2), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(21), Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(2), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(21), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(21), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("+")
Stack: [Num(21), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(3), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(3), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(3), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(3), Sym("n"), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(3)
Stack: [Num(21), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(3), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(3), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(3), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(3), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(3), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(3), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(3), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(3), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(3), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(3), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(3), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(3), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(3), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(3), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(3), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(3), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(3), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(3), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(3), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(3), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(3), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(21), Num(3), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(3), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(21), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(21), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(3), Num(1), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(3), Num(1), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(3), Num(1), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(3), Num(1), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(3), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(3), Num(1), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(3), Num(1), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(3), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(3), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(3), Num(1), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("+")
Stack: [Num(21), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("+")
Stack: [Num(21), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(5), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(5), Num(6), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(5), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(5), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(5), Num(4), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(5), Sym("n"), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Num(4)
Stack: [Num(21), Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(5), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(5), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(5), Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(5), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(5), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(5), Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(5), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(5), Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(5), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(5), Sym("n"), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(3)
Stack: [Num(21), Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(5), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(5), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(5), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(5), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(5), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(5), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(5), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(5), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(5), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(5), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(5), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(5), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(5), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(5), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(5), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(5), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(5), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(5), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(5), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(5), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(21), Num(5), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(5), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(5), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(5), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(5), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(5), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(21), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(21), Num(5), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(5), Num(1), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(5), Num(1), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(5), Num(1), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(5), Num(1), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(5), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(5), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(5), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(5), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(5), Num(1), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(5), Num(1), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(5), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(5), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(5), Num(1), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("+")
Stack: [Num(21), Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(5), Num(2), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(5), Num(2), Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(5), Num(2), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(5), Num(2), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(5), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(5), Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(5), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(5), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(5), Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(5), Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(5), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(5), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(5), Num(2), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(5), Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(5), Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(5), Num(2), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(5), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(5), Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(5), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(5), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(5), Num(2), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(5), Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(5), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(5), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(5), Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(5), Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(5), Num(2), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(5), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(5), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(5), Num(2), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(5), Num(2), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(21), Num(5), Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(5), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(5), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(5), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(5), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(5), Num(2), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(21), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(21), Num(5), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("+")
Stack: [Num(21), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("+")
Stack: [Num(21), Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(8), Num(7)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(8), Num(7), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(8), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(8), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(8), Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(8), Sym("n"), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Num(5)
Stack: [Num(21), Num(8), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(8), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(8), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(8), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(8), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(8), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(8), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(8), Num(4), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(8), Sym("n"), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Num(4)
Stack: [Num(21), Num(8), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(8), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(8), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(8), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(8), Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(8), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(8), Sym("n"), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(3)
Stack: [Num(21), Num(8), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(8), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(8), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(8), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(8), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(8), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(8), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(8), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(8), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(8), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(8), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(8), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(8), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(8), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(8), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(8), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(8), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(8), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(21), Num(8), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(8), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(8), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(21), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(21), Num(8), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(8), Num(1), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(8), Num(1), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(8), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(8), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(8), Num(1), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(8), Num(1), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(8), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(8), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(1), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(8), Num(1), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(8), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(8), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(1), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("+")
Stack: [Num(21), Num(8), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(8), Num(2), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(8), Num(2), Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(8), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(8), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(8), Num(2), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(8), Num(2), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(8), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(8), Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(8), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(8), Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(8), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(8), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(2), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(8), Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(8), Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(8), Num(2), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(8), Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(8), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(2), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(8), Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(8), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(8), Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(8), Num(2), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(8), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(8), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(8), Num(2), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(8), Num(2), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(21), Num(8), Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(8), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(8), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(2), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(21), Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(21), Num(8), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("+")
Stack: [Num(21), Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(8), Num(3), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(8), Num(3), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(8), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(8), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(8), Num(3), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(8), Num(3), Sym("n"), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Num(3)
Stack: [Num(21), Num(8), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(8), Num(3), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(8), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(3), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(8), Num(3), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(8), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(8), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(3), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(8), Num(3), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(8), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(8), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(8), Num(3), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(8), Num(3), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(8), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(8), Num(3), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(8), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(3), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(8), Num(3), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(8), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(8), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(3), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(8), Num(3), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(8), Num(3), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(8), Num(3), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(8), Num(3), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(8), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(8), Num(3), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(8), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(3), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(8), Num(3), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(8), Num(3), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(8), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(8), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(8), Num(3), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(8), Num(3), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(21), Num(8), Num(3), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(8), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(8), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(3), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(21), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(21), Num(8), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(8), Num(3), Num(1), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(21), Num(8), Num(3), Num(1), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(21), Num(8), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(21), Num(8), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(21), Num(8), Num(3), Num(1), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(21), Num(8), Num(3), Num(1), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(3), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(21), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(21), Num(8), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(21), Num(8), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(3), Num(1), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(21), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(21), Num(8), Num(3), Num(1), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(21), Num(8), Num(3), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(21), Num(8), Num(3), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(21), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(21), Num(8), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(21), Num(8), Num(3), Num(1), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(21), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("+")
Stack: [Num(21), Num(8), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("+")
Stack: [Num(21), Num(8), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("+")
Stack: [Num(21), Num(8), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
n: Num(7)
--------------------------------
eval: Op("+")
Stack: [Num(21), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(9)
--------------------------------
eval: Op("n")
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(10)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(10), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(8), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Op("def")
Stack: [Num(34), Sym("n"), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Num(8)
Stack: [Num(34), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Op("if")
Stack: [Num(34), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Op("n")
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Op("if")
Stack: [Num(34), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Op("n")
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Op("n")
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(7)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(7)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(7), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Op("def")
Stack: [Num(34), Sym("n"), Num(7)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Num(7)
Stack: [Num(34), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("if")
Stack: [Num(34), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("n")
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(7)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(7), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("if")
Stack: [Num(34), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("n")
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(7)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(7), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("n")
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(7)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(7), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(6), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("def")
Stack: [Num(34), Sym("n"), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Num(6)
Stack: [Num(34), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("if")
Stack: [Num(34), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("n")
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(6), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("if")
Stack: [Num(34), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("n")
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(6), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("n")
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(6), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("def")
Stack: [Num(34), Sym("n"), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Num(5)
Stack: [Num(34), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("if")
Stack: [Num(34), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("if")
Stack: [Num(34), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(4), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("def")
Stack: [Num(34), Sym("n"), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(4)
Stack: [Num(34), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Num(34), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Num(34), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Num(34), Sym("n"), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(3)
Stack: [Num(34), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(34), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(34), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(34), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(34), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(1), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(1), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(1), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(1), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(1), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(1), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(1), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(2), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(2), Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(2), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(2), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(2), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(2), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(2), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(2), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(2), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(2), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(2), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(3), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(3), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(3), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(3), Sym("n"), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(3)
Stack: [Num(34), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(3), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(3), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(3), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(3), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(3), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(3), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(3), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(3), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(3), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(3), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(3), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(3), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(3), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(3), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(3), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(3), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(3), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(3), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(3), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(3), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(3), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(3), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(3), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(3), Num(1), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(3), Num(1), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(3), Num(1), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(3), Num(1), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(3), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(3), Num(1), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(3), Num(1), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(3), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(3), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(3), Num(1), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(5), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(5), Num(6), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(5), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(5), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(5), Num(4), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(5), Sym("n"), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Num(4)
Stack: [Num(34), Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(5), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(5), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(5), Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(5), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(5), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(5), Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(5), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(5), Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(5), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(5), Sym("n"), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(3)
Stack: [Num(34), Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(5), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(5), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(5), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(5), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(5), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(5), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(5), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(5), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(5), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(5), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(5), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(5), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(5), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(5), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(5), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(5), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(5), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(5), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(5), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(5), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(5), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(5), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(5), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(5), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(5), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(5), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(5), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(5), Num(1), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(5), Num(1), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(5), Num(1), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(5), Num(1), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(5), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(5), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(5), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(5), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(5), Num(1), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(5), Num(1), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(5), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(5), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(5), Num(1), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(5), Num(2), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(5), Num(2), Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(5), Num(2), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(5), Num(2), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(5), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(5), Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(5), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(5), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(5), Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(5), Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(5), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(5), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(5), Num(2), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(5), Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(5), Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(5), Num(2), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(5), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(5), Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(5), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(5), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(5), Num(2), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(5), Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(5), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(5), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(5), Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(5), Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(5), Num(2), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(5), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(5), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(5), Num(2), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(5), Num(2), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(5), Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(5), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(5), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(5), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(5), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(5), Num(2), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(5), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(6)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(8), Num(7)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(8), Num(7), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(8), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(8), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(8), Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(8), Sym("n"), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Num(5)
Stack: [Num(34), Num(8), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(8), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(8), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(8), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(8), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(8), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(8), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(8), Num(4), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(8), Sym("n"), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Num(4)
Stack: [Num(34), Num(8), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(8), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(8), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(8), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(8), Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(8), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(8), Sym("n"), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(3)
Stack: [Num(34), Num(8), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(8), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(8), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(8), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(8), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(8), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(8), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(8), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(8), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(8), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(8), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(8), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(8), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(8), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(8), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(8), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(8), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(8), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(8), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(8), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(8), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(8), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(8), Num(1), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(8), Num(1), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(8), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(8), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(8), Num(1), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(8), Num(1), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(8), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(8), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(1), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(8), Num(1), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(8), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(8), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(1), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(8), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(8), Num(2), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(8), Num(2), Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(8), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(8), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(8), Num(2), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(8), Num(2), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(8), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(8), Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(8), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(8), Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(8), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(8), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(2), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(8), Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(8), Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(8), Num(2), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(8), Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(8), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(2), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(8), Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(8), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(8), Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(8), Num(2), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(8), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(8), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(8), Num(2), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(8), Num(2), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(8), Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(8), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(8), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(2), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(8), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(8), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(8), Num(3), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(8), Num(3), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(8), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(8), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(8), Num(3), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(8), Num(3), Sym("n"), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Num(3)
Stack: [Num(34), Num(8), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(8), Num(3), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(8), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(3), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(8), Num(3), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(8), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(8), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(3), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(8), Num(3), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(8), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(8), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(8), Num(3), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(8), Num(3), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(8), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(8), Num(3), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(8), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(3), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(8), Num(3), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(8), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(8), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(3), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(8), Num(3), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(8), Num(3), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(8), Num(3), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(8), Num(3), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(8), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(8), Num(3), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(8), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(3), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(8), Num(3), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(8), Num(3), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(8), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(8), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(8), Num(3), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(8), Num(3), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(8), Num(3), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(8), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(8), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(3), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(8), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(8), Num(3), Num(1), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(8), Num(3), Num(1), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(8), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(8), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(8), Num(3), Num(1), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(8), Num(3), Num(1), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(3), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(8), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(8), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(3), Num(1), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(8), Num(3), Num(1), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(8), Num(3), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(8), Num(3), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(8), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(8), Num(3), Num(1), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(8), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(8), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(8), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
n: Num(5)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(8), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(7)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(13), Num(8), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(13), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(13), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(13), Num(6), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(13), Sym("n"), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Num(6)
Stack: [Num(34), Num(13), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(13), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(13), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(6), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(13), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(13), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(6), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(13), Num(6), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(13), Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(13), Sym("n"), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Num(5)
Stack: [Num(34), Num(13), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(13), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(13), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(13), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(13), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(13), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(13), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(13), Num(4), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(13), Sym("n"), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(4)
Stack: [Num(34), Num(13), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(13), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(13), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(13), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(13), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(13), Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(13), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(13), Sym("n"), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(3)
Stack: [Num(34), Num(13), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(13), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(13), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(13), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(13), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(13), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(13), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(13), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(13), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(13), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(13), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(13), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(13), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(13), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(13), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(13), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(13), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(13), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(13), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(13), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(13), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(13), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(13), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(13), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(13), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(13), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(13), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(1), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(13), Num(1), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(13), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(13), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(13), Num(1), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(13), Num(1), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(13), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(13), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(1), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(13), Num(1), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(13), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(1), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(13), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(2), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(13), Num(2), Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(13), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(13), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(13), Num(2), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(13), Num(2), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(13), Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(13), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(13), Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(13), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(2), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(13), Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(13), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(13), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(13), Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(13), Num(2), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(13), Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(13), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(2), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(13), Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(13), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(13), Num(2), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(13), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(13), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(13), Num(2), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(13), Num(2), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(13), Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(13), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(13), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(13), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(2), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(13), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(13), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(13), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(3), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(13), Num(3), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(13), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(13), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(13), Num(3), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(13), Num(3), Sym("n"), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Num(3)
Stack: [Num(34), Num(13), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(13), Num(3), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(13), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(3), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(13), Num(3), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(13), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(3), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(3), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(13), Num(3), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(13), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(13), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(13), Num(3), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(13), Num(3), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(13), Num(3), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(13), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(3), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(13), Num(3), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(13), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(3), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(13), Num(3), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(13), Num(3), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(13), Num(3), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(13), Num(3), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(13), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(3), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(13), Num(3), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(13), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(3), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(3), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(3), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(13), Num(3), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(13), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(13), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(13), Num(3), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(13), Num(3), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(13), Num(3), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(13), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(13), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(3), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(13), Num(3), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(3), Num(1), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(13), Num(3), Num(1), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(13), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(13), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(13), Num(3), Num(1), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(13), Num(3), Num(1), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(3), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(13), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(13), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(3), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(3), Num(1), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(13), Num(3), Num(1), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(13), Num(3), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(3), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(3), Num(1), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(13), Num(3), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
n: Num(3)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(13), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(5)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(5), Num(6)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(13), Num(5), Num(6), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(13), Num(5), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(13), Num(5), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(13), Num(5), Num(4), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(13), Num(5), Sym("n"), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Num(4)
Stack: [Num(34), Num(13), Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(13), Num(5), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(13), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(5), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(5), Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(13), Num(5), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(13), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(5), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(5), Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(5), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(13), Num(5), Num(4), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(13), Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(13), Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(13), Num(5), Num(3), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(13), Num(5), Sym("n"), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(3)
Stack: [Num(34), Num(13), Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(13), Num(5), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(13), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(5), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(13), Num(5), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(13), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(5), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(13), Num(5), Num(3), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(13), Num(5), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(13), Num(5), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(13), Num(5), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(13), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(13), Num(5), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(13), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(13), Num(5), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(13), Num(5), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(5), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(13), Num(5), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(13), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(5), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(13), Num(5), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(13), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(5), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(5), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(5)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(5), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(13), Num(5), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(13), Num(5), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(13), Num(5), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(13), Num(5), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(13), Num(5), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(13), Num(5), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(13), Num(5), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(13), Num(5), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(5), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(5), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(5), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(13), Num(5), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(5), Num(1), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(13), Num(5), Num(1), Num(3), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(13), Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(13), Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(13), Num(5), Num(1), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(13), Num(5), Num(1), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(5), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(13), Num(5), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(13), Num(5), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(5), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(5), Num(1), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(13), Num(5), Num(1), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(13), Num(5), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(5), Num(1), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(5), Num(1), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(5), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
n: Num(1)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(13), Num(5), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(3)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(5), Num(2), Num(4)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(4), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(13), Num(5), Num(2), Sym("n"), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(5), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(13), Num(5), Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(13), Num(5), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(5), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(13), Num(5), Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(13), Num(5), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(5), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(5), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(13), Num(5), Num(2), Sym("n"), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(5), Num(2), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(13), Num(5), Num(2), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(13), Num(5), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(5), Num(2), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(2), Op("<")])
Stack: [Num(34), Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Num(1)])
Stack: [Num(34), Num(13), Num(5), Num(2), Block([Op("n"), Num(2), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])
Stack: [Num(34), Num(13), Num(5), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(5), Num(2), Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(5), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(1)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(2)
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("-")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1), Num(2), Num(2)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("fib")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Sym("n")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("exch")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1), Num(0), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("def")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1), Sym("n"), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1), Sym("n")] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Block([Op("n"), Num(1), Op("<")])
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Num(0)])
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("if")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")])] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("n")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(1)
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("<")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1), Num(0), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Num(0)
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
n: Num(0)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1), Num(0)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
n: Num(2)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(13), Num(5), Num(2), Num(1)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
n: Num(4)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(13), Num(5), Num(3)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
n: Num(6)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(13), Num(8)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
n: Num(8)
--------------------------------
eval: Op("+")
Stack: [Num(34), Num(21)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
n: Num(10)
--------------------------------
Code: fib

Stack: [Num(10)]
 -> [Num(55)]

--------------------------------
eval: Op("puts")
Stack: [Num(55)] 

fib: Block([Sym("n"), Op("exch"), Op("def"), Block([Op("n"), Num(1), Op("<")]), Block([Num(0)]), Block([Block([Op("n"), Num(2), Op("<")]), Block([Num(1)]), Block([Op("n"), Num(1), Op("-"), Op("fib"), Op("n"), Num(2), Op("-"), Op("fib"), Op("+")]), Op("if")]), Op("if")])
55
--------------------------------
Code: puts

Stack: [Num(55)]
 -> []

